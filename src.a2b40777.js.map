{"version":3,"sources":["../node_modules/ecsy/src/Utils.js","../node_modules/ecsy/src/SystemManager.js","../node_modules/ecsy/src/ObjectPool.js","../node_modules/ecsy/src/EventDispatcher.js","../node_modules/ecsy/src/Query.js","../node_modules/ecsy/src/QueryManager.js","../node_modules/ecsy/src/Component.js","../node_modules/ecsy/src/SystemStateComponent.js","../node_modules/ecsy/src/EntityManager.js","../node_modules/ecsy/src/ComponentManager.js","../node_modules/ecsy/src/Version.js","../node_modules/ecsy/src/WrapImmutableComponent.js","../node_modules/ecsy/src/Entity.js","../node_modules/ecsy/src/World.js","../node_modules/ecsy/src/System.js","../node_modules/ecsy/src/TagComponent.js","../node_modules/ecsy/src/Types.js","../node_modules/ecsy/src/RemoteDevTools/utils.js","../node_modules/ecsy/src/RemoteDevTools/index.js","../node_modules/ecsy/src/index.js","components/BallComponent.ts","components/CanvasContextComponent.ts","types/Vector2Type.ts","components/CollidableComponent.ts","components/GameStateComponent.ts","components/MovementComponent.ts","components/PaddleComponent.ts","components/PositionComponent.ts","components/RadiusComponent.ts","components/RenderComponent.ts","components/SizeComponent.ts","components/index.ts","prefabs/Ball.ts","prefabs/Paddle.ts","prefabs/index.ts","utils/BoxCollision.ts","utils/Random.ts","utils/VectorMath.ts","utils/index.ts","scenes/PongScene.ts","scenes/index.ts","systems/BallSystem.ts","systems/CollisionSystem.ts","systems/MovementSystem.ts","systems/PaddleSystem.ts","systems/RendererSystem.ts","systems/index.ts","index.ts"],"names":["getName","Component","name","componentPropertyName","queryKey","Components","ids","n","length","T","componentRegistered","Error","operator","push","_typeId","sort","join","hasWindow","window","now","performance","bind","Date","undefined","isComponent","SystemManager","constructor","world","_systems","_executeSystems","lastExecutedSystem","registerSystem","SystemClass","attributes","isSystem","getSystem","console","warn","system","init","order","execute","sortSystems","unregisterSystem","splice","indexOf","a","b","priority","find","s","getSystems","removeSystem","index","executeSystem","delta","time","initialized","canExecute","startTime","executeTime","clearEvents","stop","forEach","forcePlay","enabled","stats","numSystems","systems","i","systemStats","queries","ctx","ObjectPool","initialSize","freeList","count","isObjectPool","expand","acquire","item","Math","round","pop","release","reset","clone","_pool","totalSize","totalFree","totalUsed","EventDispatcher","_listeners","fired","handled","addEventListener","eventName","listener","listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","entity","component","array","slice","call","resetCounters","Query","manager","NotComponents","entities","eventDispatcher","reactive","key","_entities","match","addEntity","prototype","ENTITY_ADDED","removeEntity","ENTITY_REMOVED","hasAllComponents","hasAnyComponents","toJSON","components","included","map","C","not","numEntities","numComponents","COMPONENT_CHANGED","QueryManager","_world","_queries","onEntityRemoved","queryName","query","onEntityComponentAdded","onEntityComponentRemoved","getQuery","props","schema","hasOwnProperty","schemaProp","type","default","copy","source","prop","dispose","checkUndefinedAttributes","src","Object","keys","srcKey","displayName","SystemStateComponent","isSystemStateComponent","EntityPool","entityManager","entityClass","EntityManager","componentsManager","_nextEntityId","_entitiesByNames","_queryManager","_entityPool","options","entityPoolSize","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","getEntityByName","createEntity","alive","ENTITY_CREATED","entityAddComponent","values","_ComponentsMap","_ComponentTypes","__proto__","numStateComponents","componentPool","getComponentsPool","_components","componentAddedToEntity","COMPONENT_ADDED","entityRemoveComponent","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","_ComponentTypesToRemove","_componentsToRemove","remove","componentRemovedFromEntity","entityRemoveAllComponents","j","_releaseEntity","removeAllEntities","processDeferredRemoval","queryComponents","numQueries","numComponentPool","_componentPool","ecsyComponentId","pool","used","size","ComponentManager","nextComponentId","hasComponent","registerComponent","objectPool","propName","Version","proxyMap","WeakMap","proxyHandler","set","target","String","wrapImmutableComponent","wrappedComponent","get","Proxy","Entity","_entityManager","id","getComponent","includeRemoved","getRemovedComponent","getComponents","getComponentsToRemove","getComponentTypes","getMutableComponent","addComponent","removeComponent","forceImmediate","hasRemovedComponent","removeAllComponents","srcComponent","DEFAULT_OPTIONS","World","assign","systemManager","eventQueues","CustomEvent","event","detail","version","lastTime","System","hasRegisteredComponent","play","_mandatoryQueries","queryConfig","unregisteredComponents","filter","c","mandatory","results","validEvents","eventMapping","added","removed","changed","listen","eventList","Array","isArray","changedComponent","json","queryDefinition","jsonQuery","method","Not","TagComponent","isTagComponent","copyValue","cloneValue","copyArray","dest","cloneArray","copyJSON","JSON","parse","stringify","cloneJSON","copyCopyable","cloneClonable","createType","typeDefinition","mandatoryProperties","undefinedProperties","p","isType","Types","Number","Boolean","Ref","generateId","result","characters","charactersLength","charAt","floor","random","injectScript","onLoad","script","document","createElement","onload","head","documentElement","appendChild","hookConsoleAndErrors","connection","fn","args","send","apply","error","message","stack","includeRemoteIdHTML","remoteId","infoDiv","style","cssText","innerHTML","body","enableRemoteDevtools","generateNewCode","localStorage","clear","setItem","location","reload","getItem","__ECSY_REMOTE_DEVTOOLS_INJECTED","__ECSY_REMOTE_DEVTOOLS","worldsBeforeLoading","onWorldCreated","e","onLoaded","peer","Peer","host","secure","port","config","iceServers","url","debug","on","data","setAttribute","parentNode","removeChild","value","eval","returnEval","urlParams","URLSearchParams","search","has"],"mappings":"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","file":"src.a2b40777.js","sourceRoot":"../src","sourcesContent":["/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nexport function getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nexport function componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nexport function queryKey(Components) {\n  var ids = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n\n    if (!componentRegistered(T)) {\n      throw new Error(`Tried to create a query with an unregistered component`);\n    }\n\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      ids.push(operator + T.Component._typeId);\n    } else {\n      ids.push(T._typeId);\n    }\n  }\n\n  return ids.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nexport const hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nexport const now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\nexport function componentRegistered(T) {\n  return (\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\n    (T.isComponent && T._typeId !== undefined)\n  );\n}\n","import { now } from \"./Utils.js\";\n\nexport class SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!SystemClass.isSystem) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extend 'System' class`\n      );\n    }\n\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find((s) => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach((system) => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      (system) =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {},\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.getName()] = {\n        queries: {},\n        executeTime: system.executeTime,\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n","export class ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T();\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n","/**\n * @private\n * @class EventDispatcher\n */\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0,\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n","import EventDispatcher from \"./EventDispatcher.js\";\nimport { queryKey } from \"./Utils.js\";\n\nexport default class Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach((component) => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map((C) => C.name),\n        not: this.NotComponents.map((C) => C.name),\n      },\n      numEntities: this.entities.length,\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length,\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n","import Query from \"./Query.js\";\nimport { queryKey } from \"./Utils.js\";\n\n/**\n * @private\n * @class QueryManager\n */\nexport default class QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n","export class Component {\n  constructor(props) {\n    if (props !== false) {\n      const schema = this.constructor.schema;\n\n      for (const key in schema) {\n        if (props && props.hasOwnProperty(key)) {\n          this[key] = props[key];\n        } else {\n          const schemaProp = schema[key];\n          if (schemaProp.hasOwnProperty(\"default\")) {\n            this[key] = schemaProp.type.clone(schemaProp.default);\n          } else {\n            const type = schemaProp.type;\n            this[key] = type.clone(type.default);\n          }\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\n        this.checkUndefinedAttributes(props);\n      }\n    }\n\n    this._pool = null;\n  }\n\n  copy(source) {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const prop = schema[key];\n\n      if (source.hasOwnProperty(key)) {\n        this[key] = prop.type.copy(source[key], this[key]);\n      }\n    }\n\n    // @DEBUG\n    if (process.env.NODE_ENV !== \"production\") {\n      this.checkUndefinedAttributes(source);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  reset() {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const schemaProp = schema[key];\n\n      if (schemaProp.hasOwnProperty(\"default\")) {\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\n      } else {\n        const type = schemaProp.type;\n        this[key] = type.copy(type.default, this[key]);\n      }\n    }\n  }\n\n  dispose() {\n    if (this._pool) {\n      this._pool.release(this);\n    }\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  checkUndefinedAttributes(src) {\n    const schema = this.constructor.schema;\n\n    // Check that the attributes defined in source are also defined in the schema\n    Object.keys(src).forEach((srcKey) => {\n      if (!schema.hasOwnProperty(srcKey)) {\n        console.warn(\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\n        );\n      }\n    });\n  }\n}\n\nComponent.schema = {};\nComponent.isComponent = true;\nComponent.getName = function () {\n  return this.displayName || this.name;\n};\n","import { Component } from \"./Component\";\n\nexport class SystemStateComponent extends Component {}\n\nSystemStateComponent.isSystemStateComponent = true;\n","import { ObjectPool } from \"./ObjectPool.js\";\nimport QueryManager from \"./QueryManager.js\";\nimport EventDispatcher from \"./EventDispatcher.js\";\nimport { SystemStateComponent } from \"./SystemStateComponent.js\";\n\nclass EntityPool extends ObjectPool {\n  constructor(entityManager, entityClass, initialSize) {\n    super(entityClass, undefined);\n    this.entityManager = entityManager;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T(this.entityManager);\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n}\n\n/**\n * @private\n * @class EntityManager\n */\nexport class EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n    this._nextEntityId = 0;\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new EntityPool(\n      this,\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\n    if (\n      typeof Component._typeId === \"undefined\" &&\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\n    ) {\n      throw new Error(\n        `Attempted to add unregistered component \"${Component.getName()}\"`\n      );\n    }\n\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          \"Component type already exists on entity.\",\n          entity,\n          Component.getName()\n        );\n      }\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n\n    var component = componentPool\n      ? componentPool.acquire()\n      : new Component(values);\n\n    if (componentPool && values) {\n      component.copy(values);\n    }\n\n    entity._components[Component._typeId] = component;\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      entity._componentsToRemove[Component._typeId] =\n        entity._components[Component._typeId];\n      delete entity._components[Component._typeId];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var component = entity._components[Component._typeId];\n    delete entity._components[Component._typeId];\n    component.dispose();\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n\n    this.entityRemoveAllComponents(entity, immediately);\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n    entity._pool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var component = entity._componentsToRemove[Component._typeId];\n        delete entity._componentsToRemove[Component._typeId];\n        component.dispose();\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats,\n    };\n\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\n      stats.componentPool[pool.T.getName()] = {\n        used: pool.totalUsed(),\n        size: pool.count,\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n","import { ObjectPool } from \"./ObjectPool.js\";\n\nexport class ComponentManager {\n  constructor() {\n    this.Components = [];\n    this._ComponentsMap = {};\n\n    this._componentPool = {};\n    this.numComponents = {};\n    this.nextComponentId = 0;\n  }\n\n  hasComponent(Component) {\n    return this.Components.indexOf(Component) !== -1;\n  }\n\n  registerComponent(Component, objectPool) {\n    if (this.Components.indexOf(Component) !== -1) {\n      console.warn(\n        `Component type: '${Component.getName()}' already registered.`\n      );\n      return;\n    }\n\n    const schema = Component.schema;\n\n    if (!schema) {\n      throw new Error(\n        `Component \"${Component.getName()}\" has no schema property.`\n      );\n    }\n\n    for (const propName in schema) {\n      const prop = schema[propName];\n\n      if (!prop.type) {\n        throw new Error(\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\n        );\n      }\n    }\n\n    Component._typeId = this.nextComponentId++;\n    this.Components.push(Component);\n    this._ComponentsMap[Component._typeId] = Component;\n    this.numComponents[Component._typeId] = 0;\n\n    if (objectPool === undefined) {\n      objectPool = new ObjectPool(Component);\n    } else if (objectPool === false) {\n      objectPool = undefined;\n    }\n\n    this._componentPool[Component._typeId] = objectPool;\n  }\n\n  componentAddedToEntity(Component) {\n    this.numComponents[Component._typeId]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component._typeId]--;\n  }\n\n  getComponentsPool(Component) {\n    return this._componentPool[Component._typeId];\n  }\n}\n","export const Version = \"0.3.1\";\n","const proxyMap = new WeakMap();\n\nconst proxyHandler = {\n  set(target, prop) {\n    throw new Error(\n      `Tried to write to \"${target.constructor.getName()}#${String(\n        prop\n      )}\" on immutable component. Use .getMutableComponent() to modify a component.`\n    );\n  },\n};\n\nexport default function wrapImmutableComponent(T, component) {\n  if (component === undefined) {\n    return undefined;\n  }\n\n  let wrappedComponent = proxyMap.get(component);\n\n  if (!wrappedComponent) {\n    wrappedComponent = new Proxy(component, proxyHandler);\n    proxyMap.set(component, wrappedComponent);\n  }\n\n  return wrappedComponent;\n}\n","import Query from \"./Query.js\";\nimport wrapImmutableComponent from \"./WrapImmutableComponent.js\";\n\nexport class Entity {\n  constructor(entityManager) {\n    this._entityManager = entityManager || null;\n\n    // Unique ID for this entity\n    this.id = entityManager._nextEntityId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component._typeId];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component._typeId];\n    }\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getRemovedComponent(Component) {\n    const component = this._componentsToRemove[Component._typeId];\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component._typeId];\n\n    if (!component) {\n      return;\n    }\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._entityManager.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  copy(src) {\n    // TODO: This can definitely be optimized\n    for (var ecsyComponentId in src._components) {\n      var srcComponent = src._components[ecsyComponentId];\n      this.addComponent(srcComponent.constructor);\n      var component = this.getComponent(srcComponent.constructor);\n      component.copy(srcComponent);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Entity(this._entityManager).copy(this);\n  }\n\n  reset() {\n    this.id = this._entityManager._nextEntityId++;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n\n    for (var ecsyComponentId in this._components) {\n      delete this._components[ecsyComponentId];\n    }\n  }\n\n  remove(forceImmediate) {\n    return this._entityManager.removeEntity(this, forceImmediate);\n  }\n}\n","import { SystemManager } from \"./SystemManager.js\";\nimport { EntityManager } from \"./EntityManager.js\";\nimport { ComponentManager } from \"./ComponentManager.js\";\nimport { Version } from \"./Version.js\";\nimport { hasWindow, now } from \"./Utils.js\";\nimport { Entity } from \"./Entity.js\";\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity,\n};\n\nexport class World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version },\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now() / 1000;\n  }\n\n  registerComponent(Component, objectPool) {\n    this.componentsManager.registerComponent(Component, objectPool);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  hasRegisteredComponent(Component) {\n    return this.componentsManager.hasComponent(Component);\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now() / 1000;\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats(),\n    };\n\n    return stats;\n  }\n}\n","import Query from \"./Query.js\";\nimport { componentRegistered } from \"./Utils.js\";\n\nexport class System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n\n        // Detect if the components have already been registered\n        let unregisteredComponents = Components.filter(\n          (Component) => !componentRegistered(Component)\n        );\n\n        if (unregisteredComponents.length > 0) {\n          throw new Error(\n            `Tried to create a query '${\n              this.constructor.name\n            }.${queryName}' with unregistered components: [${unregisteredComponents\n              .map((c) => c.getName())\n              .join(\", \")}]`\n          );\n        }\n\n        var query = this.world.entityManager.queryComponents(Components);\n\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities,\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach((eventName) => {\n            if (!this.execute) {\n              console.warn(\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity) => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else {\n                  /*\n                  // Checking just specific components\n                  let changedList = (this.queries[queryName][eventName] = {});\n                  event.forEach(component => {\n                    let eventList = (changedList[\n                      componentPropertyName(component)\n                    ] = []);\n                    query.eventDispatcher.addEventListener(\n                      Query.prototype.COMPONENT_CHANGED,\n                      (entity, changedComponent) => {\n                        if (\n                          changedComponent.constructor === component &&\n                          eventList.indexOf(entity) === -1\n                        ) {\n                          eventList.push(entity);\n                        }\n                      }\n                    );\n                  });\n                  */\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  (entity) => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.getName(),\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {},\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key,\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach((method) => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length,\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nSystem.isSystem = true;\nSystem.getName = function () {\n  return this.displayName || this.name;\n};\n\nexport function Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component,\n  };\n}\n","import { Component } from \"./Component\";\n\nexport class TagComponent extends Component {\n  constructor() {\n    super(false);\n  }\n}\n\nTagComponent.isTagComponent = true;\n","export const copyValue = (src) => src;\n\nexport const cloneValue = (src) => src;\n\nexport const copyArray = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.slice();\n  }\n\n  dest.length = 0;\n\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n\n  return dest;\n};\n\nexport const cloneArray = (src) => src && src.slice();\n\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const copyCopyable = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.clone();\n  }\n\n  return dest.copy(src);\n};\n\nexport const cloneClonable = (src) => src && src.clone();\n\nexport function createType(typeDefinition) {\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\n\n  var undefinedProperties = mandatoryProperties.filter((p) => {\n    return !typeDefinition.hasOwnProperty(p);\n  });\n\n  if (undefinedProperties.length > 0) {\n    throw new Error(\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nexport const Types = {\n  Number: createType({\n    name: \"Number\",\n    default: 0,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Boolean: createType({\n    name: \"Boolean\",\n    default: false,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  String: createType({\n    name: \"String\",\n    default: \"\",\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Array: createType({\n    name: \"Array\",\n    default: [],\n    copy: copyArray,\n    clone: cloneArray,\n  }),\n\n  Ref: createType({\n    name: \"Ref\",\n    default: undefined,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  JSON: createType({\n    name: \"JSON\",\n    default: null,\n    copy: copyJSON,\n    clone: cloneJSON,\n  }),\n};\n","export function generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n","/* global Peer */\nimport { injectScript, generateId } from \"./utils.js\";\nimport { hasWindow } from \"../Utils.js\";\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach((key) => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args),\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", (error) => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack,\n      }),\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nexport function enableRemoteDevtools(remoteId) {\n  if (!hasWindow) {\n    console.warn(\"Remote devtools not available outside the browser\");\n    return;\n  }\n\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = (e) => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    // var peer = new Peer(remoteId);\n    var peer = new Peer(remoteId, {\n      host: \"peerjs.ecsy.io\",\n      secure: true,\n      port: 443,\n      config: {\n        iceServers: [\n          { url: \"stun:stun.l.google.com:19302\" },\n          { url: \"stun:stun1.l.google.com:19302\" },\n          { url: \"stun:stun2.l.google.com:19302\" },\n          { url: \"stun:stun3.l.google.com:19302\" },\n          { url: \"stun:stun4.l.google.com:19302\" },\n        ],\n      },\n      debug: 3,\n    });\n\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", (connection) => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function () {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function (data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach((world) => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version },\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value,\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nif (hasWindow) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // @todo Provide a way to disable it if needed\n  if (urlParams.has(\"enable-remote-devtools\")) {\n    enableRemoteDevtools();\n  }\n}\n","export { World } from \"./World.js\";\nexport { System, Not } from \"./System.js\";\nexport { Component } from \"./Component.js\";\nexport { SystemStateComponent } from \"./SystemStateComponent.js\";\nexport { TagComponent } from \"./TagComponent.js\";\nexport { ObjectPool } from \"./ObjectPool.js\";\nexport {\n  Types,\n  createType,\n  copyValue,\n  cloneValue,\n  copyArray,\n  cloneArray,\n  copyJSON,\n  cloneJSON,\n  copyCopyable,\n  cloneClonable,\n} from \"./Types.js\";\nexport { Version } from \"./Version.js\";\nexport { enableRemoteDevtools } from \"./RemoteDevTools/index.js\";\nexport { Entity as _Entity } from \"./Entity.js\";\n","import { TagComponent } from \"ecsy\";\n\nexport class BallComponent extends TagComponent {}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  ctx: CanvasRenderingContext2D;\n  width: number;\n  height: number;\n}\n\nexport class CanvasContextComponent extends Component<IPropTypes> {\n  static schema = {\n    ctx: { type: Types.Ref },\n    width: { type: Types.Number },\n    height: { type: Types.Number },\n  };\n\n  ctx: CanvasRenderingContext2D;\n  width: number;\n  height: number;\n}\n","import { createType, copyCopyable, cloneClonable } from \"ecsy\";\n\nexport class Vector2 {\n  x: number;\n  y: number;\n\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  set(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  copy(source: Vector2) {\n    this.x = source.x;\n    this.y = source.y;\n    return this;\n  }\n\n  clone() {\n    return new Vector2().set(this.x, this.y);\n  }\n}\n\nexport const Vector2Type = createType({\n  name: \"Vector2\",\n  default: new Vector2(),\n  copy: copyCopyable,\n  clone: cloneClonable,\n});\n","import { Component, Types, Entity } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types/Vector2Type\";\n\ninterface IPropTypes {\n  box: Vector2;\n  wallCollision: Vector2;\n  collidingEntities: Entity[];\n}\n\nexport class CollidableComponent extends Component<IPropTypes> {\n  static schema = {\n    box: { type: Vector2Type },\n    wallCollision: { type: Vector2Type },\n    collidingEntities: { type: Types.Array },\n  };\n  box: Vector2;\n  wallCollision: Vector2;\n  collidingEntities: Entity[];\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  player1Points: number;\n  player2Points: number;\n  pressedKeyCodes: number[];\n}\n\nexport class GameStateComponent extends Component<IPropTypes> {\n  static schema = {\n    player1Points: { type: Types.Number },\n    player2Points: { type: Types.Number },\n    pressedKeyCodes: { type: Types.Array },\n  };\n  player1Points: number;\n  player2Points: number;\n  pressedKeyCodes: number[];\n}\n","import { Component, Types } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types/Vector2Type\";\n\ninterface IPropTypes {\n  direction: Vector2;\n  velocity: number;\n  isEnabled: boolean;\n}\n\nexport class MovementComponent extends Component<IPropTypes> {\n  static schema = {\n    direction: { type: Vector2Type },\n    velocity: { type: Types.Number },\n    isEnabled: { type: Types.Boolean, default: true },\n  };\n\n  direction: Vector2;\n  velocity: number;\n  isEnabled: boolean;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  playerIndex: number;\n}\n\nexport class PaddleComponent extends Component<IPropTypes> {\n  static schema = {\n    playerIndex: { type: Types.Number },\n  };\n\n  playerIndex: number;\n}\n","import { Component } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types/Vector2Type\";\n\ninterface IPropTypes {\n  value: Vector2;\n}\n\nexport class PositionComponent extends Component<IPropTypes> {\n  static schema = {\n    value: { type: Vector2Type },\n  };\n\n  value: Vector2;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  value: number;\n}\n\nexport class RadiusComponent extends Component<IPropTypes> {\n  static schema = {\n    value: { type: Types.Number },\n  };\n\n  value: number;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  primitive: string;\n  isEnabled: boolean;\n}\n\nexport class RenderComponent extends Component<IPropTypes> {\n  static schema = {\n    primitive: { type: Types.String, default: \"box\" },\n    isEnabled: { type: Types.Boolean, default: true },\n  };\n\n  primitive: string;\n  isEnabled: boolean;\n}\n","import { Component } from \"ecsy\";\nimport { Vector2Type, Vector2 } from \"../types/Vector2Type\";\n\ninterface IPropTypes {\n  value: Vector2;\n}\n\nexport class SizeComponent extends Component<IPropTypes> {\n  static schema = {\n    value: { type: Vector2Type },\n  };\n\n  value: Vector2;\n}\n","export * from \"./BallComponent\";\nexport * from \"./CanvasContextComponent\";\nexport * from \"./CollidableComponent\";\nexport * from \"./GameStateComponent\";\nexport * from \"./MovementComponent\";\nexport * from \"./PaddleComponent\";\nexport * from \"./PositionComponent\";\nexport * from \"./RadiusComponent\";\nexport * from \"./RenderComponent\";\nexport * from \"./SizeComponent\";\n","import {\n  BallComponent,\n  CollidableComponent,\n  MovementComponent,\n  RenderComponent,\n  PositionComponent,\n  RadiusComponent,\n} from \"../components\";\nimport { World } from \"ecsy\";\nimport { Vector2 } from \"../types/Vector2Type\";\n\nexport function createBall(\n  world: World,\n  position: Vector2,\n  direction: Vector2,\n  radius: number,\n  velocity: number\n) {\n  return world\n    .createEntity()\n    .addComponent(BallComponent)\n    .addComponent(RenderComponent, {\n      primitive: \"circle\",\n    })\n    .addComponent(MovementComponent, {\n      direction,\n      velocity,\n    })\n    .addComponent(PositionComponent, {\n      value: position,\n    })\n    .addComponent(RadiusComponent, { value: radius })\n    .addComponent(CollidableComponent, { box: new Vector2(10, 10) });\n}\n","import { World } from \"ecsy\";\nimport {\n  CollidableComponent,\n  MovementComponent,\n  PaddleComponent,\n  PositionComponent,\n  RenderComponent,\n  SizeComponent,\n} from \"../components\";\nimport { Vector2 } from \"../types/Vector2Type\";\n\nexport function createPaddle(\n  world: World,\n  playerIndex: number,\n  position: Vector2,\n  direction: Vector2,\n  velocity: number,\n  size: Vector2\n) {\n  return world\n    .createEntity()\n    .addComponent(PaddleComponent, { playerIndex })\n    .addComponent(RenderComponent, {\n      primitive: \"rect\",\n    })\n    .addComponent(MovementComponent, {\n      direction,\n      velocity,\n    })\n    .addComponent(PositionComponent, {\n      value: position,\n    })\n    .addComponent(SizeComponent, { value: size })\n    .addComponent(CollidableComponent, { box: size });\n}\n","export * from \"./Ball\";\nexport * from \"./Paddle\";\n","import { Vector2 } from \"../types/Vector2Type\";\n\ninterface IBoxStruct {\n  position: Vector2;\n  dimensions: Vector2;\n}\n\nexport class BoxCollision {\n  static isColliding(boxA: IBoxStruct, boxB: IBoxStruct): boolean {\n    return (\n      boxA.position.x < boxB.position.x + boxB.dimensions.x &&\n      boxA.position.x + boxA.dimensions.x > boxB.position.x &&\n      boxA.position.y < boxB.position.y + boxB.dimensions.y &&\n      boxA.position.y + boxA.dimensions.y > boxB.position.y\n    );\n  }\n}\n","import { Vector2 } from \"../types/Vector2Type\";\n\nexport class Random {\n  static getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  static getMinusOrPlusOne() {\n    return Random.getRandomArbitrary(0, 1) < 0.5 ? -1 : 1;\n  }\n\n  static getRandomDirection() {\n    return new Vector2(Random.getMinusOrPlusOne(), Random.getMinusOrPlusOne());\n  }\n}\n","import { Vector2 } from \"../types/Vector2Type\";\n\nexport class VectorMath {\n  static add(a: Vector2, b: Vector2): Vector2 {\n    return new Vector2(a.x + b.x, a.y + b.y);\n  }\n\n  static multiply(a: Vector2, b: Vector2 | number): Vector2 {\n    if (b instanceof Vector2) {\n      return new Vector2(a.x * b.x, a.y * b.y);\n    } else {\n      return new Vector2(a.x * b, a.y * b);\n    }\n  }\n}\n","export * from \"./BoxCollision\";\nexport * from \"./Random\";\nexport * from \"./VectorMath\";\n","import { IScene } from \"./IScene\";\nimport { createBall, createPaddle } from \"../prefabs\";\nimport { Vector2 } from \"../types/Vector2Type\";\nimport { Random } from \"../utils\";\nimport { Entity, World } from \"ecsy\";\n\nexport class PongScene implements IScene {\n  ball: Entity;\n  paddle1: Entity;\n  paddle2: Entity;\n\n  load(world: World, canvas: HTMLCanvasElement): void {\n    // Instantiate a circle entity on the middle of the canvas\n    this.ball = createBall(\n      world,\n      new Vector2(canvas.width / 2, canvas.height / 2),\n      Random.getRandomDirection(),\n      10,\n      2\n    );\n\n    // Instantiate paddles\n    const paddleSize = new Vector2(20, 120);\n    const paddleSpeed = 5;\n    const paddleOffset = 10;\n\n    // Player 1\n    this.paddle1 = createPaddle(\n      world,\n      0,\n      new Vector2(paddleOffset, canvas.height / 2 - paddleSize.y / 2),\n      new Vector2(),\n      paddleSpeed,\n      paddleSize,\n      paddleOffset\n    );\n\n    // Player 2\n    this.paddle2 = createPaddle(\n      world,\n      1,\n      new Vector2(\n        canvas.width - paddleSize.x - paddleOffset,\n        canvas.height / 2 - paddleSize.y / 2\n      ),\n      new Vector2(),\n      paddleSpeed,\n      paddleSize,\n      paddleOffset\n    );\n  }\n  unload(): void {\n    this.ball.remove();\n    this.paddle1.remove();\n    this.paddle2.remove();\n  }\n}\n","export * from \"./PongScene\";\n","import { System } from \"ecsy\";\nimport {\n  PositionComponent,\n  CollidableComponent,\n  MovementComponent,\n  BallComponent,\n  RadiusComponent,\n} from \"../components\";\n\nexport class BallSystem extends System {\n  static queries = {\n    balls: { components: [BallComponent] },\n  };\n\n  execute(): void {\n    const balls = this.queries.balls.results;\n\n    balls.forEach((entity) => {\n      // Get entity components\n      const collision = entity.getComponent<CollidableComponent>(\n        CollidableComponent\n      );\n      const radius = entity.getComponent<RadiusComponent>(RadiusComponent);\n      const position = entity.getMutableComponent<PositionComponent>(\n        PositionComponent\n      );\n      const movement = entity.getMutableComponent<MovementComponent>(\n        MovementComponent\n      );\n\n      if (collision.wallCollision.y !== 0) {\n        movement.direction.y = -movement.direction.y;\n        movement.velocity += 0.1;\n        position.value.y =\n          position.value.y + (radius.value / 2) * movement.direction.y;\n      }\n\n      if (collision.wallCollision.x !== 0) {\n        movement.direction.x = -movement.direction.x;\n        position.value.x =\n          position.value.x + radius.value * movement.direction.x;\n      }\n\n      if (collision.collidingEntities.length) {\n        movement.direction.x = -movement.direction.x;\n        position.value.x + radius.value * movement.direction.x;\n      }\n    });\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  CanvasContextComponent,\n  PositionComponent,\n  CollidableComponent,\n} from \"../components\";\nimport { BoxCollision } from \"../utils\";\n\nexport class CollisionSystem extends System {\n  static queries = {\n    canvas: { components: [CanvasContextComponent] },\n    collidables: { components: [CollidableComponent] },\n  };\n\n  execute(): void {\n    const canvasEntity = this.queries.canvas.results[0];\n    const collidables = this.queries.collidables.results;\n\n    // Get canvas dimensions\n    const canvas = canvasEntity.getComponent<CanvasContextComponent>(\n      CanvasContextComponent\n    );\n\n    collidables.forEach((a) => {\n      // Get entity components\n      const aCollision = a.getMutableComponent<CollidableComponent>(\n        CollidableComponent\n      );\n      const aPosition = a.getMutableComponent<PositionComponent>(\n        PositionComponent\n      );\n\n      // Clear collisions from past frame\n      aCollision.collidingEntities = [];\n\n      // Check collision against stage Y\n      if (aPosition.value.y > canvas.height - aCollision.box.y) {\n        aCollision.wallCollision.y = 1;\n      } else if (aPosition.value.y < 0) {\n        aCollision.wallCollision.y = -1;\n      } else {\n        aCollision.wallCollision.y = 0;\n      }\n\n      // Check collision against stage X\n      if (aPosition.value.x > canvas.width - aCollision.box.x) {\n        aCollision.wallCollision.x = 1;\n      } else if (aPosition.value.x < 0 + aCollision.box.x) {\n        aCollision.wallCollision.x = -1;\n      } else {\n        aCollision.wallCollision.x = 0;\n      }\n\n      // Check collision between entities\n      collidables\n        .filter((b) => b.id != a.id)\n        .forEach((b) => {\n          const bCollision = b.getComponent<CollidableComponent>(\n            CollidableComponent\n          );\n          const bPosition = b.getComponent<PositionComponent>(\n            PositionComponent\n          );\n\n          if (\n            BoxCollision.isColliding(\n              { dimensions: aCollision.box, position: aPosition.value },\n              { dimensions: bCollision.box, position: bPosition.value }\n            )\n          ) {\n            aCollision.collidingEntities.push(b);\n          }\n        });\n    });\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  CanvasContextComponent,\n  MovementComponent,\n  PositionComponent,\n} from \"../components\";\nimport { VectorMath } from \"../utils\";\n\nexport class MovementSystem extends System {\n  static queries = {\n    movable: { components: [MovementComponent, PositionComponent] },\n  };\n\n  execute(): void {\n    const movables = this.queries.movable.results;\n\n    movables.forEach((entity) => {\n      // Get entity movement and position components\n      const movement = entity.getMutableComponent<MovementComponent>(\n        MovementComponent\n      );\n      const position = entity.getMutableComponent<PositionComponent>(\n        PositionComponent\n      );\n\n      // If entity movement is not enabled, skip this\n      if (!movement.isEnabled) return;\n\n      let appliedMovement = VectorMath.multiply(\n        movement.direction,\n        movement.velocity\n      );\n\n      position.value = VectorMath.add(position.value, appliedMovement);\n    });\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  PositionComponent,\n  CollidableComponent,\n  MovementComponent,\n  PaddleComponent,\n  GameStateComponent,\n} from \"../components\";\n\nexport class PaddleSystem extends System {\n  static queries = {\n    paddles: { components: [PaddleComponent] },\n    gameState: { components: [GameStateComponent] },\n  };\n\n  playersControlSchemes = {\n    0: {\n      up: 87,\n      down: 83,\n    },\n    1: {\n      up: 38,\n      down: 40,\n    },\n  };\n\n  execute(): void {\n    const paddles = this.queries.paddles.results;\n    const gameStateEntity = this.queries.gameState.results[0];\n    const gameState = gameStateEntity.getComponent<GameStateComponent>(\n      GameStateComponent\n    );\n\n    paddles.forEach((entity) => {\n      // Get entity components\n      const paddle = entity.getComponent<PaddleComponent>(PaddleComponent);\n      const movement = entity.getMutableComponent<MovementComponent>(\n        MovementComponent\n      );\n      const collision = entity.getComponent<CollidableComponent>(\n        CollidableComponent\n      );\n\n      // Get control scheme according to player index\n      const paddleControlScheme = this.playersControlSchemes[\n        paddle.playerIndex\n      ];\n\n      // Reset movement to 0;\n      movement.direction.y = 0;\n\n      // Check for up/down movement\n      if (\n        gameState.pressedKeyCodes.includes(paddleControlScheme.up) &&\n        collision.wallCollision.y != -1\n      )\n        movement.direction.y -= 1;\n\n      if (\n        gameState.pressedKeyCodes.includes(paddleControlScheme.down) &&\n        collision.wallCollision.y != 1\n      )\n        movement.direction.y += 1;\n    });\n  }\n}\n","import { System, Entity } from \"ecsy\";\nimport {\n  RenderComponent,\n  SizeComponent,\n  CanvasContextComponent,\n  RadiusComponent,\n  PositionComponent,\n} from \"../components\";\n\nexport class RendererSystem extends System {\n  static queries = {\n    canvas: { components: [CanvasContextComponent] },\n    renderables: { components: [RenderComponent] },\n  };\n\n  execute(): void {\n    const canvas = this.queries.canvas.results[0];\n    const {\n      ctx,\n      width: canvasWidth,\n      height: canvasHeight,\n    } = canvas.getComponent<CanvasContextComponent>(CanvasContextComponent);\n\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    this.queries.renderables.results.forEach((entity) => {\n      const { primitive, isEnabled } = entity.getComponent<RenderComponent>(\n        RenderComponent\n      );\n\n      // If not enabled, skip render\n      if (!isEnabled) return;\n\n      const renderFunctions = {\n        rect: this.renderRect,\n        circle: this.renderCircle,\n      };\n\n      if (renderFunctions[primitive]) {\n        renderFunctions[primitive](ctx, entity);\n      } else {\n        console.log(\n          `${primitive} primitive does not implement a render function`\n        );\n      }\n    });\n  }\n\n  renderRect(ctx: CanvasRenderingContext2D, entity: Entity): void {\n    const position = entity.getComponent<PositionComponent>(PositionComponent);\n    const size = entity.getComponent<SizeComponent>(SizeComponent);\n\n    ctx.beginPath();\n    ctx.rect(position.value.x, position.value.y, size.value.x, size.value.y);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n  }\n\n  renderCircle(ctx: CanvasRenderingContext2D, entity: Entity): void {\n    const position = entity.getComponent<PositionComponent>(PositionComponent);\n    const radius = entity.getComponent<RadiusComponent>(RadiusComponent);\n    ctx.beginPath();\n    ctx.arc(\n      position.value.x,\n      position.value.y,\n      radius.value,\n      0,\n      2 * Math.PI,\n      false\n    );\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n  }\n}\n","export * from \"./BallSystem\";\nexport * from \"./CollisionSystem\";\nexport * from \"./MovementSystem\";\nexport * from \"./PaddleSystem\";\nexport * from \"./RendererSystem\";\n","import { World } from \"ecsy\";\nimport {\n  BallComponent,\n  CanvasContextComponent,\n  CollidableComponent,\n  GameStateComponent,\n  MovementComponent,\n  PaddleComponent,\n  PositionComponent,\n  RadiusComponent,\n  RenderComponent,\n  SizeComponent,\n} from \"./components\";\nimport { PongScene } from \"./scenes\";\nimport {\n  BallSystem,\n  CollisionSystem,\n  MovementSystem,\n  PaddleSystem,\n  RendererSystem,\n} from \"./systems\";\n\n// Instantiate ECSY world\nexport const world = new World();\n\n// Register ECSY components\nworld\n  .registerComponent(BallComponent)\n  .registerComponent(CanvasContextComponent)\n  .registerComponent(CollidableComponent)\n  .registerComponent(GameStateComponent)\n  .registerComponent(MovementComponent)\n  .registerComponent(PositionComponent)\n  .registerComponent(PaddleComponent)\n  .registerComponent(RadiusComponent)\n  .registerComponent(RenderComponent)\n  .registerComponent(SizeComponent)\n  .registerSystem(CollisionSystem)\n  .registerSystem(RendererSystem)\n  .registerSystem(BallSystem)\n  .registerSystem(PaddleSystem)\n  .registerSystem(MovementSystem);\n\n// Initialize our GameState singleton\nconst gameStateEntity = world.createEntity().addComponent(GameStateComponent);\nconst gameState = gameStateEntity.getMutableComponent<GameStateComponent>(\n  GameStateComponent\n);\n\n// Get a reference to our canvas HTML element\nconst canvas = document.getElementById(\"game\") as HTMLCanvasElement;\n\n// Create CanvasContext singleton entity and provide it the canvas context and dimensions\nworld.createEntity().addComponent(CanvasContextComponent, {\n  ctx: canvas.getContext(\"2d\"),\n  width: canvas.width,\n  height: canvas.height,\n});\n\n// Load our game scene into the world\nconst pongScene = new PongScene();\npongScene.load(world, canvas);\n\n// Monitor for keyboard events\n\nwindow.addEventListener(\n  \"keydown\",\n  (e) => {\n    gameState.pressedKeyCodes = [...gameState.pressedKeyCodes, e.keyCode];\n  },\n  false\n);\n\nwindow.addEventListener(\n  \"keyup\",\n  (e) => {\n    gameState.pressedKeyCodes = gameState.pressedKeyCodes.filter(\n      (keyCode) => keyCode !== e.keyCode\n    );\n  },\n  false\n);\n\n// Implement and execute game loop\nfunction update() {\n  world.execute();\n  requestAnimationFrame(update);\n}\n\nupdate();\n"]}