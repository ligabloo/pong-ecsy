{"mappings":"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","sources":["./node_modules/ecsy/src/Utils.js","./node_modules/ecsy/src/SystemManager.js","./node_modules/ecsy/src/ObjectPool.js","./node_modules/ecsy/src/EventDispatcher.js","./node_modules/ecsy/src/Query.js","./node_modules/ecsy/src/QueryManager.js","./node_modules/ecsy/src/Component.js","./node_modules/ecsy/src/SystemStateComponent.js","./node_modules/ecsy/src/EntityManager.js","./node_modules/ecsy/src/ComponentManager.js","./node_modules/ecsy/src/Version.js","./node_modules/ecsy/src/WrapImmutableComponent.js","./node_modules/ecsy/src/Entity.js","./node_modules/ecsy/src/World.js","./node_modules/ecsy/src/System.js","./node_modules/ecsy/src/TagComponent.js","./node_modules/ecsy/src/Types.js","./node_modules/ecsy/src/RemoteDevTools/utils.js","./node_modules/ecsy/src/RemoteDevTools/index.js","./src/types/PlayerType.ts","./src/types/Vector2Type.ts","./src/components/BallComponent.ts","./src/components/CanvasContextComponent.ts","./src/components/CollidableComponent.ts","./src/types/enums.ts","./src/components/GameStateComponent.ts","./src/components/MovementComponent.ts","./src/components/PaddleComponent.ts","./src/components/PositionComponent.ts","./src/components/RadiusComponent.ts","./src/components/RenderComponent.ts","./src/components/SizeComponent.ts","./src/prefabs/Ball.ts","./src/prefabs/Paddle.ts","./src/utils/BoxCollision.ts","./src/utils/Random.ts","./src/utils/VectorMath.ts","./src/scenes/PongScene.ts","./src/systems/BallSystem.ts","./src/systems/CollisionSystem.ts","./src/systems/MovementSystem.ts","./src/systems/PaddleSystem.ts","./src/systems/RendererSystem.ts","./src/systems/GameSystem.ts","./src/index.ts"],"sourcesContent":["/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nexport function getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nexport function componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nexport function queryKey(Components) {\n  var ids = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n\n    if (!componentRegistered(T)) {\n      throw new Error(`Tried to create a query with an unregistered component`);\n    }\n\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      ids.push(operator + T.Component._typeId);\n    } else {\n      ids.push(T._typeId);\n    }\n  }\n\n  return ids.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nexport const hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nexport const now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\nexport function componentRegistered(T) {\n  return (\n    (typeof T === \"object\" && T.Component._typeId !== undefined) ||\n    (T.isComponent && T._typeId !== undefined)\n  );\n}\n","import { now } from \"./Utils.js\";\n\nexport class SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!SystemClass.isSystem) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extend 'System' class`\n      );\n    }\n\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.getName()}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.getName()}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find((s) => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach((system) => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      (system) =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {},\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.getName()] = {\n        queries: {},\n        executeTime: system.executeTime,\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n","export class ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T();\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n","/**\n * @private\n * @class EventDispatcher\n */\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0,\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n","import EventDispatcher from \"./EventDispatcher.js\";\nimport { queryKey } from \"./Utils.js\";\n\nexport default class Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach((component) => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map((C) => C.name),\n        not: this.NotComponents.map((C) => C.name),\n      },\n      numEntities: this.entities.length,\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length,\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n","import Query from \"./Query.js\";\nimport { queryKey } from \"./Utils.js\";\n\n/**\n * @private\n * @class QueryManager\n */\nexport default class QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n","export class Component {\n  constructor(props) {\n    if (props !== false) {\n      const schema = this.constructor.schema;\n\n      for (const key in schema) {\n        if (props && props.hasOwnProperty(key)) {\n          this[key] = props[key];\n        } else {\n          const schemaProp = schema[key];\n          if (schemaProp.hasOwnProperty(\"default\")) {\n            this[key] = schemaProp.type.clone(schemaProp.default);\n          } else {\n            const type = schemaProp.type;\n            this[key] = type.clone(type.default);\n          }\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"production\" && props !== undefined) {\n        this.checkUndefinedAttributes(props);\n      }\n    }\n\n    this._pool = null;\n  }\n\n  copy(source) {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const prop = schema[key];\n\n      if (source.hasOwnProperty(key)) {\n        this[key] = prop.type.copy(source[key], this[key]);\n      }\n    }\n\n    // @DEBUG\n    if (process.env.NODE_ENV !== \"production\") {\n      this.checkUndefinedAttributes(source);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  reset() {\n    const schema = this.constructor.schema;\n\n    for (const key in schema) {\n      const schemaProp = schema[key];\n\n      if (schemaProp.hasOwnProperty(\"default\")) {\n        this[key] = schemaProp.type.copy(schemaProp.default, this[key]);\n      } else {\n        const type = schemaProp.type;\n        this[key] = type.copy(type.default, this[key]);\n      }\n    }\n  }\n\n  dispose() {\n    if (this._pool) {\n      this._pool.release(this);\n    }\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  checkUndefinedAttributes(src) {\n    const schema = this.constructor.schema;\n\n    // Check that the attributes defined in source are also defined in the schema\n    Object.keys(src).forEach((srcKey) => {\n      if (!schema.hasOwnProperty(srcKey)) {\n        console.warn(\n          `Trying to set attribute '${srcKey}' not defined in the '${this.constructor.name}' schema. Please fix the schema, the attribute value won't be set`\n        );\n      }\n    });\n  }\n}\n\nComponent.schema = {};\nComponent.isComponent = true;\nComponent.getName = function () {\n  return this.displayName || this.name;\n};\n","import { Component } from \"./Component\";\n\nexport class SystemStateComponent extends Component {}\n\nSystemStateComponent.isSystemStateComponent = true;\n","import { ObjectPool } from \"./ObjectPool.js\";\nimport QueryManager from \"./QueryManager.js\";\nimport EventDispatcher from \"./EventDispatcher.js\";\nimport { SystemStateComponent } from \"./SystemStateComponent.js\";\n\nclass EntityPool extends ObjectPool {\n  constructor(entityManager, entityClass, initialSize) {\n    super(entityClass, undefined);\n    this.entityManager = entityManager;\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      var clone = new this.T(this.entityManager);\n      clone._pool = this;\n      this.freeList.push(clone);\n    }\n    this.count += count;\n  }\n}\n\n/**\n * @private\n * @class EntityManager\n */\nexport class EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n    this._nextEntityId = 0;\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new EntityPool(\n      this,\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    // @todo Probably define Component._typeId with a default value and avoid using typeof\n    if (\n      typeof Component._typeId === \"undefined\" &&\n      !this.world.componentsManager._ComponentsMap[Component._typeId]\n    ) {\n      throw new Error(\n        `Attempted to add unregistered component \"${Component.getName()}\"`\n      );\n    }\n\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\n          \"Component type already exists on entity.\",\n          entity,\n          Component.getName()\n        );\n      }\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n\n    var component = componentPool\n      ? componentPool.acquire()\n      : new Component(values);\n\n    if (componentPool && values) {\n      component.copy(values);\n    }\n\n    entity._components[Component._typeId] = component;\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      entity._componentsToRemove[Component._typeId] =\n        entity._components[Component._typeId];\n      delete entity._components[Component._typeId];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var component = entity._components[Component._typeId];\n    delete entity._components[Component._typeId];\n    component.dispose();\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n\n    this.entityRemoveAllComponents(entity, immediately);\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n    entity._pool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var component = entity._componentsToRemove[Component._typeId];\n        delete entity._componentsToRemove[Component._typeId];\n        component.dispose();\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats,\n    };\n\n    for (var ecsyComponentId in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[ecsyComponentId];\n      stats.componentPool[pool.T.getName()] = {\n        used: pool.totalUsed(),\n        size: pool.count,\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n","import { ObjectPool } from \"./ObjectPool.js\";\n\nexport class ComponentManager {\n  constructor() {\n    this.Components = [];\n    this._ComponentsMap = {};\n\n    this._componentPool = {};\n    this.numComponents = {};\n    this.nextComponentId = 0;\n  }\n\n  hasComponent(Component) {\n    return this.Components.indexOf(Component) !== -1;\n  }\n\n  registerComponent(Component, objectPool) {\n    if (this.Components.indexOf(Component) !== -1) {\n      console.warn(\n        `Component type: '${Component.getName()}' already registered.`\n      );\n      return;\n    }\n\n    const schema = Component.schema;\n\n    if (!schema) {\n      throw new Error(\n        `Component \"${Component.getName()}\" has no schema property.`\n      );\n    }\n\n    for (const propName in schema) {\n      const prop = schema[propName];\n\n      if (!prop.type) {\n        throw new Error(\n          `Invalid schema for component \"${Component.getName()}\". Missing type for \"${propName}\" property.`\n        );\n      }\n    }\n\n    Component._typeId = this.nextComponentId++;\n    this.Components.push(Component);\n    this._ComponentsMap[Component._typeId] = Component;\n    this.numComponents[Component._typeId] = 0;\n\n    if (objectPool === undefined) {\n      objectPool = new ObjectPool(Component);\n    } else if (objectPool === false) {\n      objectPool = undefined;\n    }\n\n    this._componentPool[Component._typeId] = objectPool;\n  }\n\n  componentAddedToEntity(Component) {\n    this.numComponents[Component._typeId]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component._typeId]--;\n  }\n\n  getComponentsPool(Component) {\n    return this._componentPool[Component._typeId];\n  }\n}\n","export const Version = \"0.3.1\";\n","const proxyMap = new WeakMap();\n\nconst proxyHandler = {\n  set(target, prop) {\n    throw new Error(\n      `Tried to write to \"${target.constructor.getName()}#${String(\n        prop\n      )}\" on immutable component. Use .getMutableComponent() to modify a component.`\n    );\n  },\n};\n\nexport default function wrapImmutableComponent(T, component) {\n  if (component === undefined) {\n    return undefined;\n  }\n\n  let wrappedComponent = proxyMap.get(component);\n\n  if (!wrappedComponent) {\n    wrappedComponent = new Proxy(component, proxyHandler);\n    proxyMap.set(component, wrappedComponent);\n  }\n\n  return wrappedComponent;\n}\n","import Query from \"./Query.js\";\nimport wrapImmutableComponent from \"./WrapImmutableComponent.js\";\n\nexport class Entity {\n  constructor(entityManager) {\n    this._entityManager = entityManager || null;\n\n    // Unique ID for this entity\n    this.id = entityManager._nextEntityId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component._typeId];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component._typeId];\n    }\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getRemovedComponent(Component) {\n    const component = this._componentsToRemove[Component._typeId];\n\n    return process.env.NODE_ENV !== \"production\"\n      ? wrapImmutableComponent(Component, component)\n      : component;\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component._typeId];\n\n    if (!component) {\n      return;\n    }\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._entityManager.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._entityManager.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._entityManager.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  copy(src) {\n    // TODO: This can definitely be optimized\n    for (var ecsyComponentId in src._components) {\n      var srcComponent = src._components[ecsyComponentId];\n      this.addComponent(srcComponent.constructor);\n      var component = this.getComponent(srcComponent.constructor);\n      component.copy(srcComponent);\n    }\n\n    return this;\n  }\n\n  clone() {\n    return new Entity(this._entityManager).copy(this);\n  }\n\n  reset() {\n    this.id = this._entityManager._nextEntityId++;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n\n    for (var ecsyComponentId in this._components) {\n      delete this._components[ecsyComponentId];\n    }\n  }\n\n  remove(forceImmediate) {\n    return this._entityManager.removeEntity(this, forceImmediate);\n  }\n}\n","import { SystemManager } from \"./SystemManager.js\";\nimport { EntityManager } from \"./EntityManager.js\";\nimport { ComponentManager } from \"./ComponentManager.js\";\nimport { Version } from \"./Version.js\";\nimport { hasWindow, now } from \"./Utils.js\";\nimport { Entity } from \"./Entity.js\";\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity,\n};\n\nexport class World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version },\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now() / 1000;\n  }\n\n  registerComponent(Component, objectPool) {\n    this.componentsManager.registerComponent(Component, objectPool);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  hasRegisteredComponent(Component) {\n    return this.componentsManager.hasComponent(Component);\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now() / 1000;\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats(),\n    };\n\n    return stats;\n  }\n}\n","import Query from \"./Query.js\";\nimport { componentRegistered } from \"./Utils.js\";\n\nexport class System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getName() {\n    return this.constructor.getName();\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n\n        // Detect if the components have already been registered\n        let unregisteredComponents = Components.filter(\n          (Component) => !componentRegistered(Component)\n        );\n\n        if (unregisteredComponents.length > 0) {\n          throw new Error(\n            `Tried to create a query '${\n              this.constructor.name\n            }.${queryName}' with unregistered components: [${unregisteredComponents\n              .map((c) => c.getName())\n              .join(\", \")}]`\n          );\n        }\n\n        var query = this.world.entityManager.queryComponents(Components);\n\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities,\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED, // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach((eventName) => {\n            if (!this.execute) {\n              console.warn(\n                `System '${this.getName()}' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity) => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else {\n                  /*\n                  // Checking just specific components\n                  let changedList = (this.queries[queryName][eventName] = {});\n                  event.forEach(component => {\n                    let eventList = (changedList[\n                      componentPropertyName(component)\n                    ] = []);\n                    query.eventDispatcher.addEventListener(\n                      Query.prototype.COMPONENT_CHANGED,\n                      (entity, changedComponent) => {\n                        if (\n                          changedComponent.constructor === component &&\n                          eventList.indexOf(entity) === -1\n                        ) {\n                          eventList.push(entity);\n                        }\n                      }\n                    );\n                  });\n                  */\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  (entity) => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.getName(),\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {},\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key,\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach((method) => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length,\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nSystem.isSystem = true;\nSystem.getName = function () {\n  return this.displayName || this.name;\n};\n\nexport function Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component,\n  };\n}\n","import { Component } from \"./Component\";\n\nexport class TagComponent extends Component {\n  constructor() {\n    super(false);\n  }\n}\n\nTagComponent.isTagComponent = true;\n","export const copyValue = (src) => src;\n\nexport const cloneValue = (src) => src;\n\nexport const copyArray = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.slice();\n  }\n\n  dest.length = 0;\n\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i]);\n  }\n\n  return dest;\n};\n\nexport const cloneArray = (src) => src && src.slice();\n\nexport const copyJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const cloneJSON = (src) => JSON.parse(JSON.stringify(src));\n\nexport const copyCopyable = (src, dest) => {\n  if (!src) {\n    return src;\n  }\n\n  if (!dest) {\n    return src.clone();\n  }\n\n  return dest.copy(src);\n};\n\nexport const cloneClonable = (src) => src && src.clone();\n\nexport function createType(typeDefinition) {\n  var mandatoryProperties = [\"name\", \"default\", \"copy\", \"clone\"];\n\n  var undefinedProperties = mandatoryProperties.filter((p) => {\n    return !typeDefinition.hasOwnProperty(p);\n  });\n\n  if (undefinedProperties.length > 0) {\n    throw new Error(\n      `createType expects a type definition with the following properties: ${undefinedProperties.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nexport const Types = {\n  Number: createType({\n    name: \"Number\",\n    default: 0,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Boolean: createType({\n    name: \"Boolean\",\n    default: false,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  String: createType({\n    name: \"String\",\n    default: \"\",\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  Array: createType({\n    name: \"Array\",\n    default: [],\n    copy: copyArray,\n    clone: cloneArray,\n  }),\n\n  Ref: createType({\n    name: \"Ref\",\n    default: undefined,\n    copy: copyValue,\n    clone: cloneValue,\n  }),\n\n  JSON: createType({\n    name: \"JSON\",\n    default: null,\n    copy: copyJSON,\n    clone: cloneJSON,\n  }),\n};\n","export function generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nexport function injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n","/* global Peer */\nimport { injectScript, generateId } from \"./utils.js\";\nimport { hasWindow } from \"../Utils.js\";\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach((key) => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args),\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", (error) => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack,\n      }),\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nexport function enableRemoteDevtools(remoteId) {\n  if (!hasWindow) {\n    console.warn(\"Remote devtools not available outside the browser\");\n    return;\n  }\n\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = (e) => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    // var peer = new Peer(remoteId);\n    var peer = new Peer(remoteId, {\n      host: \"peerjs.ecsy.io\",\n      secure: true,\n      port: 443,\n      config: {\n        iceServers: [\n          { url: \"stun:stun.l.google.com:19302\" },\n          { url: \"stun:stun1.l.google.com:19302\" },\n          { url: \"stun:stun2.l.google.com:19302\" },\n          { url: \"stun:stun3.l.google.com:19302\" },\n          { url: \"stun:stun4.l.google.com:19302\" },\n        ],\n      },\n      debug: 3,\n    });\n\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", (connection) => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function () {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function (data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach((world) => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version },\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value,\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nif (hasWindow) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // @todo Provide a way to disable it if needed\n  if (urlParams.has(\"enable-remote-devtools\")) {\n    enableRemoteDevtools();\n  }\n}\n","import { createType, copyCopyable, cloneClonable } from \"ecsy\";\n\nexport class Player {\n  element: HTMLElement;\n  score: number;\n\n  constructor(element = null, score = 0) {\n    this.element = element;\n    this.score = score;\n  }\n\n  copy(source: Player) {\n    this.score = source.score;\n    this.element = source.element;\n    return this;\n  }\n\n  clone() {\n    return new Player(this.element, this.score);\n  }\n}\n\nexport const PlayerType = createType({\n  name: \"Player\",\n  default: new Player(),\n  copy: copyCopyable,\n  clone: cloneClonable,\n});\n","import { createType, copyCopyable, cloneClonable } from \"ecsy\";\n\nexport class Vector2 {\n  x: number;\n  y: number;\n\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  copy(source: Vector2) {\n    this.x = source.x;\n    this.y = source.y;\n    return this;\n  }\n\n  clone() {\n    return new Vector2(this.x, this.y);\n  }\n}\n\nexport const Vector2Type = createType({\n  name: \"Vector2\",\n  default: new Vector2(),\n  copy: copyCopyable,\n  clone: cloneClonable,\n});\n","import { Component, Types } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types\";\n\ninterface IPropTypes {\n  initialPosition: Vector2;\n  initialVelocity: number;\n}\n\nexport class BallComponent extends Component<IPropTypes> {\n  static schema = {\n    initialPosition: { type: Vector2Type },\n    initialVelocity: { type: Types.Number },\n  };\n\n  initialPosition: Vector2;\n  initialVelocity: number;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  ctx: CanvasRenderingContext2D;\n  width: number;\n  height: number;\n}\n\nexport class CanvasContextComponent extends Component<IPropTypes> {\n  static schema = {\n    ctx: { type: Types.Ref },\n    width: { type: Types.Number },\n    height: { type: Types.Number },\n  };\n\n  ctx: CanvasRenderingContext2D;\n  width: number;\n  height: number;\n}\n","import { Component, Types, Entity } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types\";\n\ninterface IPropTypes {\n  box: Vector2;\n  wallCollision: Vector2;\n  collidingEntities: Entity[];\n}\n\nexport class CollidableComponent extends Component<IPropTypes> {\n  static schema = {\n    box: { type: Vector2Type },\n    wallCollision: { type: Vector2Type },\n    collidingEntities: { type: Types.Array },\n  };\n  box: Vector2;\n  wallCollision: Vector2;\n  collidingEntities: Entity[];\n}\n","export enum GameState {\n  Waiting,\n  Running,\n}\n\nexport enum PlayerSchemeKeys {\n  ArrowUp = 38,\n  ArrowDown = 40,\n  W = 87,\n  S = 83,\n}\n","import { Component, Types } from \"ecsy\";\nimport { GameState } from \"../types/enums\";\nimport { Player, PlayerType } from \"../types\";\n\ninterface IPropTypes {\n  state: GameState;\n  player1: Player;\n  player2: Player;\n  pressedKeyCodes: number[];\n}\n\nexport class GameStateComponent extends Component<IPropTypes> {\n  static schema = {\n    state: { type: Types.Number, default: GameState.Waiting },\n    player1: { type: PlayerType },\n    player2: { type: PlayerType },\n    pressedKeyCodes: { type: Types.Array },\n  };\n\n  state: GameState;\n  player1: Player;\n  player2: Player;\n  pressedKeyCodes: number[];\n}\n","import { Component, Types } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types\";\n\ninterface IPropTypes {\n  direction: Vector2;\n  velocity: number;\n  isEnabled: boolean;\n}\n\nexport class MovementComponent extends Component<IPropTypes> {\n  static schema = {\n    direction: { type: Vector2Type },\n    velocity: { type: Types.Number },\n    isEnabled: { type: Types.Boolean, default: true },\n  };\n\n  direction: Vector2;\n  velocity: number;\n  isEnabled: boolean;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  playerIndex: number;\n}\n\nexport class PaddleComponent extends Component<IPropTypes> {\n  static schema = {\n    playerIndex: { type: Types.Number },\n  };\n\n  playerIndex: number;\n}\n","import { Component } from \"ecsy\";\nimport { Vector2, Vector2Type } from \"../types/Vector2Type\";\n\ninterface IPropTypes {\n  value: Vector2;\n}\n\nexport class PositionComponent extends Component<IPropTypes> {\n  static schema = {\n    value: { type: Vector2Type },\n  };\n\n  value: Vector2;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  value: number;\n}\n\nexport class RadiusComponent extends Component<IPropTypes> {\n  static schema = {\n    value: { type: Types.Number },\n  };\n\n  value: number;\n}\n","import { Component, Types } from \"ecsy\";\n\ninterface IPropTypes {\n  primitive: string;\n  isEnabled: boolean;\n}\n\nexport class RenderComponent extends Component<IPropTypes> {\n  static schema = {\n    primitive: { type: Types.String, default: \"box\" },\n    isEnabled: { type: Types.Boolean, default: true },\n  };\n\n  primitive: string;\n  isEnabled: boolean;\n}\n","import { Component } from \"ecsy\";\nimport { Vector2Type, Vector2 } from \"../types\";\n\ninterface IPropTypes {\n  value: Vector2;\n}\n\nexport class SizeComponent extends Component<IPropTypes> {\n  static schema = {\n    value: { type: Vector2Type },\n  };\n\n  value: Vector2;\n}\n","import {\n  BallComponent,\n  CollidableComponent,\n  MovementComponent,\n  RenderComponent,\n  PositionComponent,\n  RadiusComponent,\n} from \"../components\";\nimport { World } from \"ecsy\";\nimport { Vector2 } from \"../types\";\n\nexport function createBall(\n  world: World,\n  position: Vector2,\n  direction: Vector2,\n  radius: number,\n  velocity: number\n) {\n  return world\n    .createEntity()\n    .addComponent(BallComponent, {\n      initialPosition: position,\n      initialVelocity: velocity,\n    })\n    .addComponent(RenderComponent, {\n      primitive: \"circle\",\n    })\n    .addComponent(MovementComponent, {\n      direction,\n      velocity,\n    })\n    .addComponent(PositionComponent, {\n      value: position,\n    })\n    .addComponent(RadiusComponent, { value: radius })\n    .addComponent(CollidableComponent, { box: new Vector2(10, 10) });\n}\n","import { World } from \"ecsy\";\nimport {\n  CollidableComponent,\n  MovementComponent,\n  PaddleComponent,\n  PositionComponent,\n  RenderComponent,\n  SizeComponent,\n} from \"../components\";\nimport { Vector2 } from \"../types\";\n\nexport function createPaddle(\n  world: World,\n  playerIndex: number,\n  position: Vector2,\n  direction: Vector2,\n  velocity: number,\n  size: Vector2\n) {\n  return world\n    .createEntity()\n    .addComponent(PaddleComponent, { playerIndex })\n    .addComponent(RenderComponent, {\n      primitive: \"rect\",\n    })\n    .addComponent(MovementComponent, {\n      direction,\n      velocity,\n    })\n    .addComponent(PositionComponent, {\n      value: position,\n    })\n    .addComponent(SizeComponent, { value: size })\n    .addComponent(CollidableComponent, { box: size });\n}\n","import { Vector2 } from \"../types\";\n\ninterface IBoxStruct {\n  position: Vector2;\n  dimensions: Vector2;\n}\n\nexport class BoxCollision {\n  static isColliding(boxA: IBoxStruct, boxB: IBoxStruct): boolean {\n    return (\n      boxA.position.x < boxB.position.x + boxB.dimensions.x &&\n      boxA.position.x + boxA.dimensions.x > boxB.position.x &&\n      boxA.position.y < boxB.position.y + boxB.dimensions.y &&\n      boxA.position.y + boxA.dimensions.y > boxB.position.y\n    );\n  }\n}\n","import { Vector2 } from \"../types\";\n\nexport class Random {\n  static getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n  }\n\n  static getMinusOrPlusOne() {\n    return Random.getRandomArbitrary(0, 1) < 0.5 ? -1 : 1;\n  }\n\n  static getRandomDirection() {\n    return new Vector2(Random.getMinusOrPlusOne(), Random.getMinusOrPlusOne());\n  }\n}\n","import { Vector2 } from \"../types\";\n\nexport class VectorMath {\n  static add(a: Vector2, b: Vector2): Vector2 {\n    return new Vector2(a.x + b.x, a.y + b.y);\n  }\n\n  static multiply(a: Vector2, b: Vector2 | number): Vector2 {\n    if (b instanceof Vector2) {\n      return new Vector2(a.x * b.x, a.y * b.y);\n    } else {\n      return new Vector2(a.x * b, a.y * b);\n    }\n  }\n}\n","import { IScene } from \"./IScene\";\nimport { createBall, createPaddle } from \"../prefabs\";\nimport { Vector2 } from \"../types\";\nimport { Random } from \"../utils\";\nimport { Entity, World } from \"ecsy\";\n\nexport class PongScene implements IScene {\n  ball: Entity;\n  paddle1: Entity;\n  paddle2: Entity;\n\n  load(world: World, canvas: HTMLCanvasElement): void {\n    // Instantiate a circle entity on the middle of the canvas\n    this.ball = createBall(\n      world,\n      new Vector2(canvas.width / 2, canvas.height / 2),\n      Random.getRandomDirection(),\n      10,\n      2\n    );\n\n    // Instantiate paddles\n    const paddleSize = new Vector2(20, 120);\n    const paddleSpeed = 5;\n    const paddleOffset = 10;\n\n    // Player 1\n    this.paddle1 = createPaddle(\n      world,\n      0,\n      new Vector2(paddleOffset, canvas.height / 2 - paddleSize.y / 2),\n      new Vector2(),\n      paddleSpeed,\n      paddleSize\n    );\n\n    // Player 2\n    this.paddle2 = createPaddle(\n      world,\n      1,\n      new Vector2(\n        canvas.width - paddleSize.x - paddleOffset,\n        canvas.height / 2 - paddleSize.y / 2\n      ),\n      new Vector2(),\n      paddleSpeed,\n      paddleSize\n    );\n  }\n  unload(): void {\n    this.ball.remove();\n    this.paddle1.remove();\n    this.paddle2.remove();\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  PositionComponent,\n  CollidableComponent,\n  MovementComponent,\n  BallComponent,\n  RadiusComponent,\n  GameStateComponent,\n} from \"../components\";\nimport { Random } from \"../utils\";\nimport { Vector2 } from \"../types\";\nimport { GameState } from \"../types/enums\";\n\nexport class BallSystem extends System {\n  static queries = {\n    gameState: { components: [GameStateComponent] },\n    balls: { components: [BallComponent] },\n  };\n\n  execute(): void {\n    const gameStateEntity = this.queries.gameState.results[0];\n    const balls = this.queries.balls.results;\n\n    const gameState = gameStateEntity.getMutableComponent<GameStateComponent>(\n      GameStateComponent\n    );\n\n    balls.forEach((entity) => {\n      // Get entity components\n      const { wallCollision, collidingEntities } = entity.getComponent<\n        CollidableComponent\n      >(CollidableComponent);\n      const radius = entity.getComponent<RadiusComponent>(RadiusComponent);\n      const position = entity.getMutableComponent<PositionComponent>(\n        PositionComponent\n      );\n      const movement = entity.getMutableComponent<MovementComponent>(\n        MovementComponent\n      );\n\n      if (wallCollision.y !== 0) {\n        movement.direction.y = -movement.direction.y;\n        movement.velocity += 0.1;\n        position.value.y =\n          position.value.y + (radius.value / 2) * movement.direction.y;\n      }\n\n      if (wallCollision.x !== 0) {\n        const { initialPosition, initialVelocity } = entity.getComponent<\n          BallComponent\n        >(BallComponent);\n        position.value = initialPosition;\n        movement.velocity = initialVelocity;\n        movement.direction = new Vector2(\n          movement.direction.x,\n          Random.getMinusOrPlusOne()\n        );\n\n        gameState[wallCollision.x == 1 ? \"player1\" : \"player2\"].score++;\n        gameState.state = GameState.Waiting;\n      }\n\n      if (collidingEntities.length) {\n        movement.direction.x = -movement.direction.x;\n        position.value.x + radius.value * movement.direction.x;\n      }\n    });\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  CanvasContextComponent,\n  PositionComponent,\n  CollidableComponent,\n} from \"../components\";\nimport { BoxCollision } from \"../utils\";\n\nexport class CollisionSystem extends System {\n  static queries = {\n    canvas: { components: [CanvasContextComponent] },\n    collidables: { components: [CollidableComponent] },\n  };\n\n  execute(): void {\n    const canvasEntity = this.queries.canvas.results[0];\n    const collidables = this.queries.collidables.results;\n\n    // Get canvas dimensions\n    const canvas = canvasEntity.getComponent<CanvasContextComponent>(\n      CanvasContextComponent\n    );\n\n    collidables.forEach((a) => {\n      // Get entity components\n      const aCollision = a.getMutableComponent<CollidableComponent>(\n        CollidableComponent\n      );\n      const aPosition = a.getMutableComponent<PositionComponent>(\n        PositionComponent\n      );\n\n      // Clear collisions from past frame\n      aCollision.collidingEntities = [];\n\n      // Check collision against stage Y\n      if (aPosition.value.y > canvas.height - aCollision.box.y) {\n        aCollision.wallCollision.y = 1;\n      } else if (aPosition.value.y < 0) {\n        aCollision.wallCollision.y = -1;\n      } else {\n        aCollision.wallCollision.y = 0;\n      }\n\n      // Check collision against stage X\n      if (aPosition.value.x > canvas.width - aCollision.box.x) {\n        aCollision.wallCollision.x = 1;\n      } else if (aPosition.value.x < 0 + aCollision.box.x) {\n        aCollision.wallCollision.x = -1;\n      } else {\n        aCollision.wallCollision.x = 0;\n      }\n\n      // Check collision between entities\n      collidables\n        .filter((b) => b.id != a.id)\n        .forEach((b) => {\n          const bCollision = b.getComponent<CollidableComponent>(\n            CollidableComponent\n          );\n          const bPosition = b.getComponent<PositionComponent>(\n            PositionComponent\n          );\n\n          if (\n            BoxCollision.isColliding(\n              { dimensions: aCollision.box, position: aPosition.value },\n              { dimensions: bCollision.box, position: bPosition.value }\n            )\n          ) {\n            aCollision.collidingEntities.push(b);\n          }\n        });\n    });\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  MovementComponent,\n  PositionComponent,\n  GameStateComponent,\n} from \"../components\";\nimport { VectorMath } from \"../utils\";\nimport { GameState } from \"../types/enums\";\n\nexport class MovementSystem extends System {\n  static queries = {\n    gameState: { components: [GameStateComponent] },\n    movable: { components: [MovementComponent, PositionComponent] },\n  };\n\n  execute(): void {\n    const gameStateEntity = this.queries.gameState.results[0];\n    const movables = this.queries.movable.results;\n\n    const gameState = gameStateEntity.getComponent<GameStateComponent>(\n      GameStateComponent\n    );\n\n    // If gamestate is not Running, skip movement logic\n    if (gameState.state != GameState.Running) return;\n\n    movables.forEach((entity) => {\n      // Get entity movement and position components\n      const movement = entity.getMutableComponent<MovementComponent>(\n        MovementComponent\n      );\n      const position = entity.getMutableComponent<PositionComponent>(\n        PositionComponent\n      );\n\n      // If entity movement is not enabled, skip this\n      if (!movement.isEnabled) return;\n\n      let appliedMovement = VectorMath.multiply(\n        movement.direction,\n        movement.velocity\n      );\n\n      position.value = VectorMath.add(position.value, appliedMovement);\n    });\n  }\n}\n","import { System } from \"ecsy\";\nimport {\n  CollidableComponent,\n  MovementComponent,\n  PaddleComponent,\n  GameStateComponent,\n} from \"../components\";\n\nimport { PlayerSchemeKeys } from \"../types/enums\";\n\nexport class PaddleSystem extends System {\n  static queries = {\n    paddles: { components: [PaddleComponent] },\n    gameState: { components: [GameStateComponent] },\n  };\n\n  playersControlSchemes = {\n    0: {\n      up: PlayerSchemeKeys.W,\n      down: PlayerSchemeKeys.S,\n    },\n    1: {\n      up: PlayerSchemeKeys.ArrowUp,\n      down: PlayerSchemeKeys.ArrowDown,\n    },\n  };\n\n  execute(): void {\n    const paddles = this.queries.paddles.results;\n    const gameStateEntity = this.queries.gameState.results[0];\n    const gameState = gameStateEntity.getComponent<GameStateComponent>(\n      GameStateComponent\n    );\n\n    paddles.forEach((entity) => {\n      // Get entity components\n      const paddle = entity.getComponent<PaddleComponent>(PaddleComponent);\n      const movement = entity.getMutableComponent<MovementComponent>(\n        MovementComponent\n      );\n      const collision = entity.getComponent<CollidableComponent>(\n        CollidableComponent\n      );\n\n      // Get control scheme according to player index\n      const paddleControlScheme = this.playersControlSchemes[\n        paddle.playerIndex\n      ];\n\n      // Reset movement to 0;\n      movement.direction.y = 0;\n\n      // Check for up/down movement\n      if (\n        gameState.pressedKeyCodes.includes(paddleControlScheme.up) &&\n        collision.wallCollision.y != -1\n      )\n        movement.direction.y -= 1;\n\n      if (\n        gameState.pressedKeyCodes.includes(paddleControlScheme.down) &&\n        collision.wallCollision.y != 1\n      )\n        movement.direction.y += 1;\n    });\n  }\n}\n","import { System, Entity } from \"ecsy\";\nimport {\n  RenderComponent,\n  SizeComponent,\n  CanvasContextComponent,\n  RadiusComponent,\n  PositionComponent,\n} from \"../components\";\n\nexport class RendererSystem extends System {\n  static queries = {\n    canvas: { components: [CanvasContextComponent] },\n    renderables: { components: [RenderComponent] },\n  };\n\n  execute(): void {\n    const canvas = this.queries.canvas.results[0];\n    const {\n      ctx,\n      width: canvasWidth,\n      height: canvasHeight,\n    } = canvas.getComponent<CanvasContextComponent>(CanvasContextComponent);\n\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    this.queries.renderables.results.forEach((entity) => {\n      const { primitive, isEnabled } = entity.getComponent<RenderComponent>(\n        RenderComponent\n      );\n\n      // If not enabled, skip render\n      if (!isEnabled) return;\n\n      const renderFunctions = {\n        rect: this.renderRect,\n        circle: this.renderCircle,\n      };\n\n      if (renderFunctions[primitive]) {\n        renderFunctions[primitive](ctx, entity);\n      } else {\n        console.log(\n          `${primitive} primitive does not implement a render function`\n        );\n      }\n    });\n  }\n\n  renderRect(ctx: CanvasRenderingContext2D, entity: Entity): void {\n    const position = entity.getComponent<PositionComponent>(PositionComponent);\n    const size = entity.getComponent<SizeComponent>(SizeComponent);\n\n    ctx.beginPath();\n    ctx.rect(position.value.x, position.value.y, size.value.x, size.value.y);\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n  }\n\n  renderCircle(ctx: CanvasRenderingContext2D, entity: Entity): void {\n    const position = entity.getComponent<PositionComponent>(PositionComponent);\n    const radius = entity.getComponent<RadiusComponent>(RadiusComponent);\n    ctx.beginPath();\n    ctx.arc(\n      position.value.x,\n      position.value.y,\n      radius.value,\n      0,\n      2 * Math.PI,\n      false\n    );\n    ctx.fillStyle = \"white\";\n    ctx.fill();\n  }\n}\n","import { System } from \"ecsy\";\nimport { GameStateComponent } from \"../components\";\nimport { GameState, PlayerSchemeKeys } from \"../types/enums\";\n\nexport class GameSystem extends System {\n  static queries = {\n    gameState: {\n      components: [GameStateComponent],\n      listen: { added: true },\n    },\n  };\n\n  execute(): void {\n    const addedEntity = this.queries.gameState.added[0];\n\n    if (addedEntity) {\n      const { player1, player2 } = addedEntity.getMutableComponent<\n        GameStateComponent\n      >(GameStateComponent);\n\n      player1.element = document.querySelector('[data-player=\"1\"]');\n      player2.element = document.querySelector('[data-player=\"2\"]');\n\n      return;\n    }\n\n    const entity = this.queries.gameState.results[0];\n\n    const gameState = entity.getMutableComponent<GameStateComponent>(\n      GameStateComponent\n    );\n\n    const stateSystems = {\n      [GameState.Waiting]: this.waitingState,\n      [GameState.Running]: this.runningState,\n      [GameState.Paused]: this.pausedState,\n    };\n\n    stateSystems[gameState.state](gameState);\n  }\n\n  waitingState(gameState: GameStateComponent) {\n    const { player1, player2 } = gameState;\n    player1.element.innerText = `${player1.score}`;\n    player2.element.innerText = `${player2.score}`;\n\n    const playerSchemeKeys = [\n      PlayerSchemeKeys.ArrowUp,\n      PlayerSchemeKeys.ArrowDown,\n      PlayerSchemeKeys.W,\n      PlayerSchemeKeys.S,\n    ];\n\n    if (\n      playerSchemeKeys.some((keyCode) =>\n        gameState.pressedKeyCodes.includes(keyCode)\n      )\n    ) {\n      gameState.state = GameState.Running;\n    }\n  }\n\n  runningState(gameState: GameStateComponent) {}\n\n  pausedState(gameState: GameStateComponent) {}\n}\n","import { World } from \"ecsy\";\nimport {\n  BallComponent,\n  CanvasContextComponent,\n  CollidableComponent,\n  GameStateComponent,\n  MovementComponent,\n  PaddleComponent,\n  PositionComponent,\n  RadiusComponent,\n  RenderComponent,\n  SizeComponent,\n} from \"./components\";\nimport { PongScene } from \"./scenes\";\nimport {\n  BallSystem,\n  CollisionSystem,\n  MovementSystem,\n  PaddleSystem,\n  RendererSystem,\n  GameSystem,\n} from \"./systems\";\nimport { Player } from \"./types\";\n\n// Instantiate ECSY world\nexport const world = new World();\n\n// Register ECSY components\nworld\n  .registerComponent(BallComponent)\n  .registerComponent(CanvasContextComponent)\n  .registerComponent(CollidableComponent)\n  .registerComponent(GameStateComponent)\n  .registerComponent(MovementComponent)\n  .registerComponent(PositionComponent)\n  .registerComponent(PaddleComponent)\n  .registerComponent(RadiusComponent)\n  .registerComponent(RenderComponent)\n  .registerComponent(SizeComponent)\n  .registerSystem(GameSystem)\n  .registerSystem(CollisionSystem)\n  .registerSystem(RendererSystem)\n  .registerSystem(BallSystem)\n  .registerSystem(PaddleSystem)\n  .registerSystem(MovementSystem);\n\n// Initialize our GameState singleton\nconst gameStateEntity = world.createEntity().addComponent(GameStateComponent);\nconst gameState = gameStateEntity.getMutableComponent<GameStateComponent>(\n  GameStateComponent\n);\n\n// Get a reference to our canvas HTML element\nconst canvas = document.getElementById(\"game\") as HTMLCanvasElement;\n\n// Create CanvasContext singleton entity and provide it the canvas context and dimensions\nworld.createEntity().addComponent(CanvasContextComponent, {\n  ctx: canvas.getContext(\"2d\"),\n  width: canvas.width,\n  height: canvas.height,\n});\n\n// Load our game scene into the world\nconst pongScene = new PongScene();\npongScene.load(world, canvas);\n\n// Monitor for keyboard events\n\nwindow.addEventListener(\n  \"keydown\",\n  (e) => {\n    gameState.pressedKeyCodes = [...gameState.pressedKeyCodes, e.keyCode];\n  },\n  false\n);\n\nwindow.addEventListener(\n  \"keyup\",\n  (e) => {\n    gameState.pressedKeyCodes = gameState.pressedKeyCodes.filter(\n      (keyCode) => keyCode !== e.keyCode\n    );\n  },\n  false\n);\n\n// Implement and execute game loop\nfunction update() {\n  world.execute();\n  requestAnimationFrame(update);\n}\n\nupdate();\n"],"names":["queryKey","Components","ids","n","length","T","componentRegistered","Error","operator","push","Component","_typeId","sort","join","hasWindow","window","now","performance","bind","Date","undefined","isComponent","SystemManager","constructor","world","this","_systems","_executeSystems","lastExecutedSystem","registerSystem","SystemClass","attributes","isSystem","name","getSystem","console","warn","getName","system","init","order","execute","sortSystems","unregisterSystem","splice","indexOf","a","b","priority","find","s","getSystems","removeSystem","index","executeSystem","delta","time","initialized","canExecute","startTime","$b32b8956930b87af10dd0def3bee748$export$now","executeTime","clearEvents","stop","forEach","forcePlay","enabled","stats","numSystems","systems","i","systemStats","queries","ctx","ObjectPool","initialSize","freeList","count","isObjectPool","expand","acquire","Math","round","pop","release","item","reset","clone","_pool","totalSize","totalFree","totalUsed","EventDispatcher","_listeners","fired","handled","addEventListener","eventName","listener","listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","entity","component","array","slice","call","resetCounters","Query","manager","NotComponents","entities","eventDispatcher","$abb693e5b72de9d11942fa6f27c0bdc$export$default","reactive","key","$b32b8956930b87af10dd0def3bee748$export$queryKey","_entities","match","addEntity","prototype","ENTITY_ADDED","removeEntity","ENTITY_REMOVED","hasAllComponents","hasAnyComponents","toJSON","components","included","map","C","not","numEntities","numComponents","COMPONENT_CHANGED","QueryManager","_world","_queries","onEntityRemoved","queryName","query","onEntityComponentAdded","onEntityComponentRemoved","getQuery","$cdd1f49103bcdafaddc56bdc1282f78$export$default","props","schema","hasOwnProperty","schemaProp","type","default","copy","source","prop","dispose","checkUndefinedAttributes","src","Object","keys","srcKey","displayName","SystemStateComponent","$decf1c164269c27537fd8e1a6712$export$Component","isSystemStateComponent","EntityPool","$ef150b598b03c0e131b72120346b$export$ObjectPool","entityManager","entityClass","super","EntityManager","componentsManager","_nextEntityId","_entitiesByNames","_queryManager","$bb7a22901c31a1f8e2482ec272fa6965$export$default","_entityPool","options","entityPoolSize","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","getEntityByName","createEntity","alive","ENTITY_CREATED","entityAddComponent","values","_ComponentsMap","_ComponentTypes","__proto__","$b69371e4e37b26cc2cbfb5dfa5205b$export$SystemStateComponent","numStateComponents","componentPool","getComponentsPool","_components","componentAddedToEntity","COMPONENT_ADDED","entityRemoveComponent","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","_ComponentTypesToRemove","_componentsToRemove","remove","componentRemovedFromEntity","entityRemoveAllComponents","j","_releaseEntity","removeAllEntities","processDeferredRemoval","queryComponents","numQueries","numComponentPool","_componentPool","ecsyComponentId","pool","used","size","ComponentManager","nextComponentId","hasComponent","registerComponent","objectPool","propName","Version","proxyMap","WeakMap","proxyHandler","set","target","String","wrapImmutableComponent","wrappedComponent","get","Proxy","Entity","_entityManager","id","getComponent","includeRemoved","getRemovedComponent","getComponents","getComponentsToRemove","getComponentTypes","getMutableComponent","addComponent","removeComponent","forceImmediate","hasRemovedComponent","removeAllComponents","srcComponent","DEFAULT_OPTIONS","$ca6f0b0076f1cac2f098e3f12a081$export$Entity","World","assign","$aa6d1d7eaee5f3412c6fedf7c80e22a$export$ComponentManager","$c47de611a43b599657cbfd39c8ba$export$EntityManager","systemManager","$d367eb233037e31e4295c9d8c7194fe$export$SystemManager","eventQueues","$b32b8956930b87af10dd0def3bee748$export$hasWindow","CustomEvent","event","detail","version","$aa6bd1bc969bfad2624cf0423d6b2$export$Version","lastTime","System","hasRegisteredComponent","play","_mandatoryQueries","queryConfig","unregisteredComponents","filter","$b32b8956930b87af10dd0def3bee748$export$componentRegistered","c","mandatory","results","validEvents","eventMapping","added","removed","changed","listen","eventList","Array","isArray","changedComponent","json","queryDefinition","jsonQuery","method","TagComponent","isTagComponent","copyValue","cloneValue","copyArray","dest","cloneArray","copyJSON","JSON","parse","stringify","cloneJSON","copyCopyable","cloneClonable","createType","typeDefinition","undefinedProperties","p","isType","Types","Number","Boolean","Ref","generateId","result","characters","charactersLength","charAt","floor","random","injectScript","onLoad","script","document","createElement","onload","head","documentElement","appendChild","hookConsoleAndErrors","connection","fn","args","send","apply","error","message","stack","includeRemoteIdHTML","remoteId","infoDiv","style","cssText","innerHTML","body","enableRemoteDevtools","generateNewCode","localStorage","clear","$f37735f93f3ccd1ff0e4fe934d135eec$export$generateId","setItem","location","reload","getItem","__ECSY_REMOTE_DEVTOOLS_INJECTED","__ECSY_REMOTE_DEVTOOLS","worldsBeforeLoading","onWorldCreated","e","onLoaded","peer","Peer","host","secure","port","config","iceServers","url","debug","on","data","setAttribute","parentNode","removeChild","value","eval","returnEval","$f37735f93f3ccd1ff0e4fe934d135eec$export$injectScript","urlParams","URLSearchParams","search","has","Player","element","arguments","score","$ca82fe984a10818c9db0c3ccdc68316c$var$_classCallCheck","PlayerType","$cf1860c19e1a5c017204f0ab320c65$export$createType","$cf1860c19e1a5c017204f0ab320c65$export$copyCopyable","$cf1860c19e1a5c017204f0ab320c65$export$cloneClonable","Vector2","x","y","$f013ca1b753de4192844747a0a914fc1$var$_classCallCheck","Vector2Type","BallComponent","initialPosition","$f013ca1b753de4192844747a0a914fc1$export$Vector2Type","initialVelocity","$cf1860c19e1a5c017204f0ab320c65$export$Types","CanvasContextComponent","width","height","CollidableComponent","GameState","PlayerSchemeKeys","box","wallCollision","collidingEntities","GameStateComponent","state","$affda4f11426b71ec9c71d90894$export$GameState","Waiting","player1","$ca82fe984a10818c9db0c3ccdc68316c$export$PlayerType","player2","pressedKeyCodes","MovementComponent","direction","velocity","isEnabled","PaddleComponent","playerIndex","PositionComponent","RadiusComponent","RenderComponent","primitive","SizeComponent","createBall","position","radius","$d87b2fc0173f558f40cf8a586c101d$export$BallComponent","$aa6eafa48d1015cbfbef07b39b2694e$export$RenderComponent","$ba40b628c6cd9199ca9ca077fd40f61f$export$MovementComponent","$ab4789819c591cb9a2e8e468a95f481$export$PositionComponent","$ff079e1e573db4252150310fb8add84$export$RadiusComponent","$ff9a33a4a179cf96d695225d9dfbfb87$export$CollidableComponent","$f013ca1b753de4192844747a0a914fc1$export$Vector2","createPaddle","$d491668b4c0e44f7e919739ab3564$export$PaddleComponent","$e916af20538cb0bb41ac03079687$export$SizeComponent","BoxCollision","boxA","boxB","dimensions","Random","min","max","getRandomArbitrary","getMinusOrPlusOne","VectorMath","PongScene","canvas","ball","$d3a480b899755da678d323dda19af2$export$createBall","$b28d6e99c9483ae9394ee9301dc$export$Random","getRandomDirection","paddleSize","paddle1","$db73b6f84524b92100f3085$export$createPaddle","paddle2","BallSystem","gameStateEntity","gameState","balls","$f4ff059be379072ec49371f7832aeab$export$GameStateComponent","_entity$getComponent","movement","_entity$getComponent2","CollisionSystem","canvasEntity","collidables","$a864a5be02647c0d657033e75a743b1f$export$CanvasContextComponent","aCollision","aPosition","bCollision","bPosition","$e65c8e9d999c72762961f10946c1f01$export$BoxCollision","isColliding","MovementSystem","movables","movable","Running","appliedMovement","$f4a8a8c1ff5238d9a30016ceb72df614$export$VectorMath","multiply","add","PaddleSystem","0","up","$affda4f11426b71ec9c71d90894$export$PlayerSchemeKeys","W","down","S","1","ArrowUp","ArrowDown","_this2","paddles","paddle","collision","paddleControlScheme","playersControlSchemes","includes","RendererSystem","_this","_canvas$getComponent","canvasWidth","canvasHeight","fillStyle","fillRect","renderables","renderFunctions","rect","renderRect","circle","renderCircle","log","concat","beginPath","fill","arc","PI","GameSystem","_stateSystems","addedEntity","_addedEntity$getMutab","querySelector","$cd3a77234b430729b1b3bc71af9e0d3f$var$_defineProperty","waitingState","runningState","Paused","pausedState","innerText","some","keyCode","$d869f60daaac5d27acba8efd631f22e$export$World","$cd3a77234b430729b1b3bc71af9e0d3f$export$GameSystem","$f0bb9551e2cd7964850f026a75c1$export$CollisionSystem","$f0b105540f9506dbe0dc33848$export$RendererSystem","$f48a2a2b9199163fa5dec0294a3b4556$export$BallSystem","$b864c06b0908bee283e0ec866ded58e$export$PaddleSystem","$afeebf4f20a2f0156935757fd79c25$export$MovementSystem","getElementById","getContext","pongScene","$b82e31d5677b27b49704821aed2e85bc$export$PongScene","update","requestAnimationFrame","load","$b04660a404e967a338647ceb28cef6e$var$_toConsumableArray"],"version":3,"file":"pong-ecsy.6d666ff1.js.map"}